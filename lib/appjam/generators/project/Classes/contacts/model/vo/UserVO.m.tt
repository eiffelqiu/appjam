//
//  <%= @class_name %>VO.m
//  PureMVC_ObjectiveC
//

#import "<%= @class_name %>VO.h"


@implementation <%= @class_name %>VO

@synthesize <%= @project_name %>name, firstName, lastName, email, password, confirmPassword, department;

+(id)with<%= @class_name %>Name:(NSString *)<%= @project_name %>name firstName:(NSString *)firstName lastName:(NSString *)lastName email:(NSString *)email password:(NSString *)password confirmPassword:(NSString *)confirmPassword department:(NSString *)department {
	<%= @class_name %>VO *<%= @project_name %>VO = [[[<%= @class_name %>VO alloc] init] autorelease];
	<%= @project_name %>VO.<%= @project_name %>name = <%= @project_name %>name;
	<%= @project_name %>VO.firstName = firstName;
	<%= @project_name %>VO.lastName = lastName;
	<%= @project_name %>VO.email = email;
	<%= @project_name %>VO.password = password;
	<%= @project_name %>VO.confirmPassword = confirmPassword;
	<%= @project_name %>VO.department = department;
	return <%= @project_name %>VO;
}

-(NSString *)givenName {
	return [NSString stringWithFormat:@"%@ %@", firstName, lastName];
}

-(BOOL)isValid {
	return <%= @project_name %>name != nil && password != nil && confirmPassword != nil && [password isEqualToString:confirmPassword];
}

-(void)dealloc {
	self.<%= @project_name %>name = nil;
	self.firstName = nil;
	self.lastName = nil;
	self.email = nil;
	self.password = nil;
	self.confirmPassword = nil;
	self.department = nil;
	[super dealloc];
}

@end
